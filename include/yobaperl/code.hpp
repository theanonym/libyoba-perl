#ifndef YOBAPERL_CODE_HPP
#define YOBAPERL_CODE_HPP

#include "yobaperl/common.hpp"
#include "yobaperl/variable.hpp"

namespace yoba {



////////////////////////////////////////////////////////////
/// \brief %Subroutine reference
///
////////////////////////////////////////////////////////////
class YOBAPERL_EXPORT Code : public Variable
{
public:



   ////////////////////////////////////////////////////////////
   /// \brief Constructor
   ///
   ////////////////////////////////////////////////////////////
   Code(Perl & perl, CV * cv, bool increase_refcount);



   /// @{ \name Misc

   ////////////////////////////////////////////////////////////
   /// \brief Convert to C++ string
   ///
   ////////////////////////////////////////////////////////////
   std::string toString() const;

   ////////////////////////////////////////////////////////////
   /// \brief Take reference
   ///
   /// \perl $ref = \&subroutine \endperl
   ///
   ////////////////////////////////////////////////////////////
   Scalar makeRef() const;

   /// @}



   /// @{ \name Internals

   ////////////////////////////////////////////////////////////
   /// \brief Raw subroutine
   ///
   ////////////////////////////////////////////////////////////
   CV * getCV() const;

   /// @}



};



} // namespace yoba

#endif // YOBAPERL_CODE_HPP
